{"version":3,"sources":["logo.svg","FormEdit.js","App.js","reportWebVitals.js","index.js"],"names":["FormEdit","props","editForm","setState","edit","state","firstName","lastName","fNup","lNup","bind","editFirstName","editLastName","saveChanges","cancel","this","event","target","value","className","onClick","type","onChange","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAAe,I,wCC0FAA,E,kDAvFb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAmBRC,SAAW,WACT,EAAKC,SAAS,CAAEC,MAAM,KAlBtB,EAAKC,MAAQ,CAEXC,UAAWL,EAAMK,UACjBC,SAAUN,EAAMM,SAEhBC,KAAMP,EAAMK,UACZG,KAAMR,EAAMM,SACZH,MAAM,GAGR,EAAKF,SAAW,EAAKA,SAASQ,KAAd,gBAChB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBACrB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKG,YAAc,EAAKA,YAAYH,KAAjB,gBACnB,EAAKI,OAAS,EAAKA,OAAOJ,KAAZ,gBAjBG,E,0DA0BjBK,KAAKZ,SAAS,CACZG,UAAWS,KAAKV,MAAMG,KACtBD,SAAUQ,KAAKV,MAAMI,KAErBL,MAAM,M,+BAMRW,KAAKZ,SAAS,CACZC,MAAM,EACNI,KAAMO,KAAKV,MAAMC,UACjBG,KAAMM,KAAKV,MAAME,a,oCAIPS,GACZD,KAAKZ,SAAS,CAAEK,KAAMQ,EAAMC,OAAOC,U,mCAGxBF,GACXD,KAAKZ,SAAS,CAAEM,KAAMO,EAAMC,OAAOC,U,+BAInC,OAAwB,IAApBH,KAAKV,MAAMD,KAEX,sBAAKe,UAAU,UAAf,UACE,8BACE,4BAAIJ,KAAKV,MAAMC,cAGjB,8BACE,4BAAIS,KAAKV,MAAME,aAEjB,wBAAQa,QAASL,KAAKb,SAAtB,qBAMJ,sBAAKiB,UAAU,OAAf,UACE,uBACEE,KAAK,OACLH,MAAOH,KAAKV,MAAMG,KAClBc,SAAUP,KAAKJ,gBAEjB,uBACA,uBACEU,KAAK,OACLH,MAAOH,KAAKV,MAAMI,KAClBa,SAAUP,KAAKH,eAEjB,uBACA,wBAAQQ,QAASL,KAAKF,YAAtB,kBACA,wBAAQO,QAASL,KAAKD,OAAtB,2B,GAnFeS,aCURC,MARf,WACE,OACE,qBAAKL,UAAU,MAAf,SACE,cAAC,EAAD,CAAUb,UAAU,aAAaC,SAAS,iBCKjCkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.03e3e4e8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\n\nclass FormEdit extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      //original names\n      firstName: props.firstName,\n      lastName: props.lastName,\n      //states for names that update with changes\n      fNup: props.firstName,\n      lNup: props.lastName,\n      edit: false,\n    };\n\n    this.editForm = this.editForm.bind(this);\n    this.editFirstName = this.editFirstName.bind(this);\n    this.editLastName = this.editLastName.bind(this);\n    this.saveChanges = this.saveChanges.bind(this);\n    this.cancel = this.cancel.bind(this);\n  }\n\n  editForm = () => {\n    this.setState({ edit: true });\n  };\n\n  //if save button is clicked update the original names\n  saveChanges() {\n    this.setState({\n      firstName: this.state.fNup,\n      lastName: this.state.lNup,\n\n      edit: false,\n    });\n  }\n\n  //if canceled, reset the updated names to the previous value\n  cancel() {\n    this.setState({\n      edit: false,\n      fNup: this.state.firstName,\n      lNup: this.state.lastName,\n    });\n  }\n\n  editFirstName(event) {\n    this.setState({ fNup: event.target.value });\n  }\n\n  editLastName(event) {\n    this.setState({ lNup: event.target.value });\n  }\n\n  render() {\n    if (this.state.edit === false) {\n      return (\n        <div className=\"display\">\n          <div>\n            <p>{this.state.firstName}</p>\n          </div>\n\n          <div>\n            <p>{this.state.lastName}</p>\n          </div>\n          <button onClick={this.editForm}>Edit</button>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"form\">\n        <input\n          type=\"text\"\n          value={this.state.fNup}\n          onChange={this.editFirstName}\n        ></input>\n        <br />\n        <input\n          type=\"text\"\n          value={this.state.lNup}\n          onChange={this.editLastName}\n        ></input>\n        <br />\n        <button onClick={this.saveChanges}>Save</button>\n        <button onClick={this.cancel}>Cancel</button>\n      </div>\n    );\n  }\n}\nexport default FormEdit;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport FormEdit from \"./FormEdit\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FormEdit firstName=\"Anastasiya\" lastName=\"Chabotska\" />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}